module attributes {llvm.data_layout = ""} {
  llvm.func @malloc(i64) -> !llvm.ptr<i8>
  llvm.func @main() -> i32 {
    %0 = llvm.mlir.constant(1 : index) : i64
    %1 = llvm.mlir.constant(2048 : index) : i64
    %2 = llvm.mlir.constant(0 : index) : i64
    %3 = llvm.mlir.constant(1 : i32) : i32
    %4 = llvm.mlir.constant(0.000000e+00 : f64) : f64
    %5 = llvm.mlir.constant(2048 : index) : i64
    %6 = llvm.mlir.constant(2048 : index) : i64
    %7 = llvm.mlir.constant(1 : index) : i64
    %8 = llvm.mlir.constant(4194304 : index) : i64
    %9 = llvm.mlir.null : !llvm.ptr<f64>
    %10 = llvm.getelementptr %9[4194304] : (!llvm.ptr<f64>) -> !llvm.ptr<f64>
    %11 = llvm.ptrtoint %10 : !llvm.ptr<f64> to i64
    %12 = llvm.call @malloc(%11) : (i64) -> !llvm.ptr<i8>
    %13 = llvm.bitcast %12 : !llvm.ptr<i8> to !llvm.ptr<f64>
    %14 = llvm.mlir.undef : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)>
    %15 = llvm.insertvalue %13, %14[0] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %16 = llvm.insertvalue %13, %15[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %17 = llvm.mlir.constant(0 : index) : i64
    %18 = llvm.insertvalue %17, %16[2] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %19 = llvm.insertvalue %5, %18[3, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %20 = llvm.insertvalue %6, %19[3, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %21 = llvm.insertvalue %6, %20[4, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %22 = llvm.insertvalue %7, %21[4, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %23 = llvm.mlir.constant(2048 : index) : i64
    %24 = llvm.mlir.constant(2048 : index) : i64
    %25 = llvm.mlir.constant(1 : index) : i64
    %26 = llvm.mlir.constant(4194304 : index) : i64
    %27 = llvm.mlir.null : !llvm.ptr<f64>
    %28 = llvm.getelementptr %27[4194304] : (!llvm.ptr<f64>) -> !llvm.ptr<f64>
    %29 = llvm.ptrtoint %28 : !llvm.ptr<f64> to i64
    %30 = llvm.call @malloc(%29) : (i64) -> !llvm.ptr<i8>
    %31 = llvm.bitcast %30 : !llvm.ptr<i8> to !llvm.ptr<f64>
    %32 = llvm.mlir.undef : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)>
    %33 = llvm.insertvalue %31, %32[0] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %34 = llvm.insertvalue %31, %33[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %35 = llvm.mlir.constant(0 : index) : i64
    %36 = llvm.insertvalue %35, %34[2] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %37 = llvm.insertvalue %23, %36[3, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %38 = llvm.insertvalue %24, %37[3, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %39 = llvm.insertvalue %24, %38[4, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %40 = llvm.insertvalue %25, %39[4, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %41 = llvm.mlir.constant(2048 : index) : i64
    %42 = llvm.mlir.constant(2048 : index) : i64
    %43 = llvm.mlir.constant(1 : index) : i64
    %44 = llvm.mlir.constant(4194304 : index) : i64
    %45 = llvm.mlir.null : !llvm.ptr<f64>
    %46 = llvm.getelementptr %45[4194304] : (!llvm.ptr<f64>) -> !llvm.ptr<f64>
    %47 = llvm.ptrtoint %46 : !llvm.ptr<f64> to i64
    %48 = llvm.call @malloc(%47) : (i64) -> !llvm.ptr<i8>
    %49 = llvm.bitcast %48 : !llvm.ptr<i8> to !llvm.ptr<f64>
    %50 = llvm.mlir.undef : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)>
    %51 = llvm.insertvalue %49, %50[0] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %52 = llvm.insertvalue %49, %51[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %53 = llvm.mlir.constant(0 : index) : i64
    %54 = llvm.insertvalue %53, %52[2] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %55 = llvm.insertvalue %41, %54[3, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %56 = llvm.insertvalue %42, %55[3, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %57 = llvm.insertvalue %42, %56[4, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    %58 = llvm.insertvalue %43, %57[4, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i64, array<2 x i64>, array<2 x i64>)> 
    llvm.br ^bb1(%2 : i64)
  ^bb1(%59: i64):  // 2 preds: ^bb0, ^bb5
    %60 = llvm.icmp "slt" %59, %1 : i64
    llvm.cond_br %60, ^bb2, ^bb6
  ^bb2:  // pred: ^bb1
    llvm.br ^bb3(%2 : i64)
  ^bb3(%61: i64):  // 2 preds: ^bb2, ^bb4
    %62 = llvm.icmp "slt" %61, %1 : i64
    llvm.cond_br %62, ^bb4, ^bb5
  ^bb4:  // pred: ^bb3
    %63 = llvm.mlir.constant(2048 : index) : i64
    %64 = llvm.mul %59, %63  : i64
    %65 = llvm.add %64, %61  : i64
    %66 = llvm.getelementptr %13[%65] : (!llvm.ptr<f64>, i64) -> !llvm.ptr<f64>
    llvm.store %4, %66 : !llvm.ptr<f64>
    %67 = llvm.add %61, %0  : i64
    llvm.br ^bb3(%67 : i64)
  ^bb5:  // pred: ^bb3
    %68 = llvm.add %59, %0  : i64
    llvm.br ^bb1(%68 : i64)
  ^bb6:  // pred: ^bb1
    llvm.br ^bb7(%2 : i64)
  ^bb7(%69: i64):  // 2 preds: ^bb6, ^bb14
    %70 = llvm.icmp "slt" %69, %1 : i64
    llvm.cond_br %70, ^bb8, ^bb15
  ^bb8:  // pred: ^bb7
    llvm.br ^bb9(%2 : i64)
  ^bb9(%71: i64):  // 2 preds: ^bb8, ^bb13
    %72 = llvm.icmp "slt" %71, %1 : i64
    llvm.cond_br %72, ^bb10, ^bb14
  ^bb10:  // pred: ^bb9
    llvm.br ^bb11(%2 : i64)
  ^bb11(%73: i64):  // 2 preds: ^bb10, ^bb12
    %74 = llvm.icmp "slt" %73, %1 : i64
    llvm.cond_br %74, ^bb12, ^bb13
  ^bb12:  // pred: ^bb11
    %75 = llvm.mlir.constant(2048 : index) : i64
    %76 = llvm.mul %69, %75  : i64
    %77 = llvm.add %76, %73  : i64
    %78 = llvm.getelementptr %31[%77] : (!llvm.ptr<f64>, i64) -> !llvm.ptr<f64>
    %79 = llvm.load %78 : !llvm.ptr<f64>
    %80 = llvm.mlir.constant(2048 : index) : i64
    %81 = llvm.mul %73, %80  : i64
    %82 = llvm.add %81, %71  : i64
    %83 = llvm.getelementptr %49[%82] : (!llvm.ptr<f64>, i64) -> !llvm.ptr<f64>
    %84 = llvm.load %83 : !llvm.ptr<f64>
    %85 = llvm.mlir.constant(2048 : index) : i64
    %86 = llvm.mul %69, %85  : i64
    %87 = llvm.add %86, %71  : i64
    %88 = llvm.getelementptr %13[%87] : (!llvm.ptr<f64>, i64) -> !llvm.ptr<f64>
    %89 = llvm.load %88 : !llvm.ptr<f64>
    %90 = llvm.intr.fma(%79, %84, %89)  : (f64, f64, f64) -> f64
    %91 = llvm.mlir.constant(2048 : index) : i64
    %92 = llvm.mul %69, %91  : i64
    %93 = llvm.add %92, %71  : i64
    %94 = llvm.getelementptr %13[%93] : (!llvm.ptr<f64>, i64) -> !llvm.ptr<f64>
    llvm.store %90, %94 : !llvm.ptr<f64>
    %95 = llvm.add %73, %0  : i64
    llvm.br ^bb11(%95 : i64)
  ^bb13:  // pred: ^bb11
    %96 = llvm.add %71, %0  : i64
    llvm.br ^bb9(%96 : i64)
  ^bb14:  // pred: ^bb9
    %97 = llvm.add %69, %0  : i64
    llvm.br ^bb7(%97 : i64)
  ^bb15:  // pred: ^bb7
    llvm.return %3 : i32
  }
}

